#include <stdio.h>

void swap(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

void printlist(int a[], int n) {
    for(int i = 0; i < n; i++) printf("%d ", a[i]);
    printf("\n");
}

void heapify(int a[], int n, int i) {
    int largest = i;
    int l = 2*i + 1;
    int r = 2*i + 2;
    if(l < n && a[l] < a[largest]) largest = l;
    if(r < n && a[r] < a[largest]) largest = r;
    if(largest != i) {
        swap(&a[i], &a[largest]);
        heapify(a, n, largest);
    }
}

void heap_sort(int a[], int n) {
    // Xây dựng max heap
    for(int i = n/2 - 1; i >= 0; i--)
        heapify(a, n, i);

    // Lặp qua từng phần tử cuối
    for(int i = n-1; i > 0; i--) {
        swap(&a[0], &a[i]);      // Đưa phần tử lớn nhất lên cuối
        printlist(a, n);         // In trạng thái mảng sau mỗi lần swap
        heapify(a, i, 0);        // Heapify lại heap với kích thước giảm
    }
}

int main() {
    int n;
    freopen("dt.txt", "r", stdin);
    scanf("%d", &n);
    int a[n];
    for(int i = 0; i < n; i++) scanf("%d", &a[i]);
    heap_sort(a, n);
    return 0;
}
