#include <stdio.h>
#include <stdlib.h>
void swap(int *a, int* b){
    int temp = *a;
    *a = *b;
    *b = temp;
}
// int partition(int* a, int start, int end){
//     int piv = a[start];
//     int i = start + 1;
//     for(int j = start + 1; j <= end ; j++){
//         if(a[j]<piv){
//             swap(&a[j],&a[i]);
//             i++;
//         }
//     }
//     swap(&a[i-1],&a[start]);
//     return i-1;
// }
int partition(int* a, int start, int end){
    int piv = a[end];
    int i = start-1;
    for(int j = start; j<=end; j++){
        if(a[j]<piv){
            i++;
            swap(&a[j],&a[i]);
        }
    }
    swap(&a[i+1],&a[end]);
    return i+1;

}
void quicksort(int* a, int start, int end){
    if(start < end){
        int pos = partition(a,start,end);
        quicksort(a,start,pos-1);
        quicksort(a,pos+1,end);
    }
}
void printList(int* a, int n){
    for(int i =0; i<n; i++){
        printf("%d ",a[i]);
    }
}
int binarySearch(int* a, int n, int x){
    int left = 0;
    int right = n - 1;
    while(left<=right){
        int mid = (right + left)/2;
        if(a[mid]>x){
            right = mid -1;
        }else if(a[mid] < x){
            left = mid + 1;
        }else{
            return 1;
        }
    }
    return 0;
}
int main(){
    int n;
    freopen("dt.txt","r", stdin);
    scanf("%d",&n);
    int a[n];
    for(int i =0 ; i < n; i++){
        scanf("%d",&a[i]);
    }
    quicksort(a,0,n-1);
    printList(a,n);
    printf("\n%d",binarySearch(a,n,5));
}
